// @ts-check
const eslint = require('@eslint/js');
const tseslint = require('typescript-eslint');
const angular = require('angular-eslint');
const eslinPluginPrettierRecommended = require('eslint-plugin-prettier/recommended');

module.exports = tseslint.config(
  {
    files: ['**/*.ts'],
    extends: [
      eslint.configs.recommended,
      ...tseslint.configs.recommended,
      ...tseslint.configs.stylistic,
      ...angular.configs.tsRecommended,
      eslinPluginPrettierRecommended,
    ],
    processor: angular.processInlineTemplates,
    rules: {
      '@angular-eslint/directive-selector': [
        'error',
        {
          type: 'attribute',
          prefix: 'app',
          style: 'camelCase',
        },
      ],
      '@angular-eslint/component-selector': [
        'error',
        {
          type: 'element',
          prefix: 'app',
          style: 'kebab-case',
        },
      ],
      '@typescript-eslint/no-unused-vars': 'error',
      '@typescript-eslint/consistent-type-imports': 'error',
      '@typescript-eslint/no-inferrable-types': 'warn',
      '@typescript-eslint/method-signature-style': ['error', 'property'],
      '@typescript-eslint/member-ordering': [
        'warn',
        {
          default: [
            'signature',
            'call-signature',
            'private-static-field',
            '#private-static-field',
            'public-static-field',
            'protected-static-field',
            'private-decorated-field',
            'public-decorated-field',
            'protected-decorated-field',
            'private-instance-field',
            '#private-instance-field',
            'protected-instance-field',
            'public-instance-field',
            'public-abstract-field',
            'protected-abstract-field',
            'private-field',
            '#private-field',
            'public-field',
            'protected-field',
            'static-field',
            'instance-field',
            'abstract-field',
            'decorated-field',
            'field',
            'static-initialization',
            'public-constructor',
            'protected-constructor',
            'private-constructor',
            'constructor',
            'public-static-get',
            'protected-static-get',
            'private-static-get',
            '#private-static-get',
            'public-decorated-get',
            'protected-decorated-get',
            'private-decorated-get',
            'public-instance-get',
            'protected-instance-get',
            'private-instance-get',
            '#private-instance-get',
            'public-abstract-get',
            'protected-abstract-get',
            'public-get',
            'protected-get',
            'private-get',
            '#private-get',
            'static-get',
            'instance-get',
            'abstract-get',
            'decorated-get',
            'get',
            'public-static-set',
            'protected-static-set',
            'private-static-set',
            '#private-static-set',
            'public-decorated-set',
            'protected-decorated-set',
            'private-decorated-set',
            'public-instance-set',
            'protected-instance-set',
            'private-instance-set',
            '#private-instance-set',
            'public-abstract-set',
            'protected-abstract-set',
            'public-set',
            'protected-set',
            'private-set',
            '#private-set',
            'static-set',
            'instance-set',
            'abstract-set',
            'decorated-set',
            'set',
            'public-static-method',
            'protected-static-method',
            'private-static-method',
            '#private-static-method',
            'public-decorated-method',
            'protected-decorated-method',
            'private-decorated-method',
            'public-instance-method',
            'protected-instance-method',
            'private-instance-method',
            '#private-instance-method',
            'public-abstract-method',
            'protected-abstract-method',
            'public-method',
            'protected-method',
            'private-method',
            '#private-method',
            'static-method',
            'instance-method',
            'abstract-method',
            'decorated-method',
            'method',
          ],
        },
      ],
    },
  },
  {
    files: ['**/*.html'],
    extends: [...angular.configs.templateRecommended, ...angular.configs.templateAccessibility],
    rules: {},
  },
);
